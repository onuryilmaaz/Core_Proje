@model EntityLayer.Concrete.Portfolio
@{
	ViewData["Title"] = "AddPortfolio";
	Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}

@using (Html.BeginForm("AddPortfolio", "Portfolio", FormMethod.Post))
{
	<div class="col-12 grid-margin stretch-card">
		<div class="card">
			<div class="card-body">

				<p class="card-description"> Proje Düzenleme Paneli </p>
				<form class="forms-sample">
					<div class="form-group">
						@Html.Label("Proje Başlığı")
						@Html.TextBoxFor(x=>x.Name, new { @class = "form-control" })
						@Html.ValidationMessageFor(x=>x.Name)
						<br />
						<label>Görsel 1</label>
						@Html.TextBoxFor(x=>x.ImageUrl, new { @class = "form-control" })
						@Html.ValidationMessageFor(x=>x.ImageUrl)
						<br />
						<label>Görsel 2</label>
						@Html.TextBoxFor(x=>x.ImageUrl2, new { @class = "form-control" })

						@Html.ValidationMessageFor(x=>x.ImageUrl2)
						<br />
						<label>Proje Url</label>
						@Html.TextBoxFor(x=>x.ProjectUrl, new { @class = "form-control" })
						@Html.ValidationMessageFor(x=>x.ProjectUrl)
						<br />
						<label>Fiyat</label>
						@Html.TextBoxFor(x=>x.Price, new { @class = "form-control" })
						@Html.ValidationMessageFor(x=>x.Price)
						<br />
						<label>Tamamlanma Oranı</label>
						@Html.TextBoxFor(x=>x.Value, new { @class = "form-control" })
						@Html.ValidationMessageFor(x=>x.Value)
						<br />
						<label>Platform</label>
						@Html.TextBoxFor(x=>x.Platform, new { @class = "form-control" })
						@Html.ValidationMessageFor(x=>x.Platform)
						<br />
					</div>
				</form>
			</div>
		</div>
	</div>
	<button class="btn btn-outline-info">Kaydet</button>
}

